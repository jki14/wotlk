import{bs as n,b1 as e,cm as t,cn as a,dl as i,dm as s,dn as l,bo as r,b4 as o,b7 as d,b9 as c,R as m,a3 as p,bn as f,D as h,a_ as u,dp as S,a6 as g,d as I,a as b,U as y,bm as T}from"./raid_sim_action-9e0deda9.chunk.js";import{B as w,r as v,m as P,a as O,b as F,c as B,I as M,R as E,M as C,d as W,w as D,A as k,e as A,n as H,T as N}from"./individual_sim_ui-458732be.chunk.js";const G={name:"Standard",data:n.create({talentsString:"05032031--325023051223010323151301351",glyphs:e.create({major1:t.GlyphOfShadow,major2:t.GlyphOfMindFlay,major3:t.GlyphOfDispersion,minor1:a.GlyphOfFortitude,minor2:a.GlyphOfShadowProtection,minor3:a.GlyphOfShadowfiend})})},j=i.create({rotationType:s.Ideal}),x=l.create({useShadowfiend:!0,useMindBlast:!0,useShadowWordDeath:!0}),R=r.create({flask:o.FlaskOfTheFrostWyrm,food:d.FoodFishFeast,defaultPotion:c.PotionOfWildMagic,prepopPotion:c.PotionOfWildMagic}),_=m.create({giftOfTheWild:p.TristateEffectImproved,powerWordFortitude:p.TristateEffectImproved,strengthOfEarthTotem:p.TristateEffectImproved,arcaneBrilliance:!0,divineSpirit:!0,trueshotAura:!0,leaderOfThePack:p.TristateEffectImproved,icyTalons:!0,totemOfWrath:!0,moonkinAura:p.TristateEffectImproved,wrathOfAirTotem:!0,sanctifiedRetribution:!0,bloodlust:!0}),V=f.create({blessingOfKings:!0,blessingOfWisdom:p.TristateEffectImproved,blessingOfMight:p.TristateEffectImproved,vampiricTouch:!0}),J=h.create({sunderArmor:!0,faerieFire:p.TristateEffectImproved,bloodFrenzy:!0,ebonPlaguebringer:!0,heartOfTheCrusader:!0,judgementOfWisdom:!0}),L={name:"P1 Preset",tooltip:w,gear:u.fromJsonString(' {\n    "items": [\n      {\n        "id": 40562,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          39998\n        ]\n      },\n      {\n        "id": 44661,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 40459,\n        "enchant": 44874,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 44005,\n        "enchant": 55642,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 44002,\n        "enchant": 33990,\n        "gems": [\n          39998,\n          39998\n        ]\n      },\n      {\n        "id": 44008,\n        "enchant": 44498,\n        "gems": [\n          39998,\n          0\n        ]\n      },\n      {\n        "id": 40454,\n        "enchant": 54999,\n        "gems": [\n          40049,\n          0\n        ]\n      },\n      {\n        "id": 40561,\n        "gems": [\n          39998\n        ]\n      },\n      {\n        "id": 40560,\n        "enchant": 41602\n      },\n      {\n        "id": 40558,\n        "enchant": 55016\n      },\n      {\n        "id": 40719\n      },\n      {\n        "id": 40399\n      },\n      {\n        "id": 40255\n      },\n      {\n        "id": 40432\n      },\n      {\n        "id": 40395,\n        "enchant": 44487\n      },\n      {\n        "id": 40273\n      },\n      {\n        "id": 39712\n      }\n    ]\n  }')},z={name:"PreBis Preset",tooltip:w,gear:u.fromJsonString('{\n    "items": [\n      {\n        "id": 42553,\n        "enchant": 44877,\n        "gems": [\n          41285,\n          40049\n        ]\n      },\n      {\n        "id": 40680\n      },\n      {\n        "id": 34210,\n        "enchant": 44874,\n        "gems": [\n          39998,\n          40026\n        ]\n      },\n      {\n        "id": 41610,\n        "enchant": 55642\n      },\n      {\n        "id": 43792,\n        "enchant": 33990,\n        "gems": [\n          39998,\n          40051\n        ]\n      },\n      {\n        "id": 37361,\n        "enchant": 44498,\n        "gems": [\n          0\n        ]\n      },\n      {\n        "id": 39530,\n        "enchant": 54999,\n        "gems": [\n          40049,\n          0\n        ]\n      },\n      {\n        "id": 40696,\n        "gems": [\n          40049,\n          39998\n        ]\n      },\n      {\n        "id": 37854,\n        "enchant": 41602\n      },\n      {\n        "id": 44202,\n        "enchant": 60623,\n        "gems": [\n          40026\n        ]\n      },\n      {\n        "id": 40585\n      },\n      {\n        "id": 37694\n      },\n      {\n        "id": 37835\n      },\n      {\n        "id": 37873\n      },\n      {\n        "id": 41384,\n        "enchant": 44487\n      },\n      {\n        "id": 40698\n      },\n      {\n        "id": 37177\n      }\n    ]\n  }')},K=v({fieldName:"armor",values:[{color:"grey",value:S.NoArmor},{actionId:g.fromSpellId(48168),value:S.InnerFire}]}),U=P({fieldName:"useMindBlast",id:g.fromSpellId(48127)}),q=P({fieldName:"useShadowWordDeath",id:g.fromSpellId(48158)}),Q=P({fieldName:"useShadowfiend",id:g.fromSpellId(34433)}),X={inputs:[O({fieldName:"rotationType",label:"Rotation Type",labelTooltip:"Choose how to clip your mindflay. Basic will never clip. Clipping will clip for other spells and use a 2xMF2 when there is time for 4 ticks. Ideal will evaluate the DPS gain of every action to determine MF actions.",values:[{name:"Basic",value:s.Basic},{name:"Clipping",value:s.Clipping},{name:"Ideal",value:s.Ideal},{name:"AoE",value:s.AoE}]}),F({fieldName:"precastVt",label:"Precast Vampiric Touch",labelTooltip:"Start fight with VT landing at time 0"}),B({fieldName:"latency",label:"Channeling Latency (ms)",labelTooltip:"Latency after a channel that lasts longer than GCD. 0 to disable. Has a minimum value of 100ms if set."})]};class Y extends M{constructor(n,e){super(n,e,{cssClass:"shadow-priest-sim-ui",knownIssues:[],epStats:[I.StatIntellect,I.StatSpirit,I.StatSpellPower,I.StatSpellHit,I.StatSpellCrit,I.StatSpellHaste,I.StatMP5],epReferenceStat:I.StatSpellPower,displayStats:[I.StatHealth,I.StatStamina,I.StatIntellect,I.StatSpirit,I.StatSpellPower,I.StatSpellHit,I.StatSpellCrit,I.StatSpellHaste,I.StatMP5],modifyDisplayStats:n=>{let e=new b;return e=e.addStat(I.StatSpellHit,1*n.getTalents().shadowFocus*y),{talents:e}},defaults:{gear:L.gear,epWeights:b.fromMap({[I.StatIntellect]:.05,[I.StatSpirit]:.11,[I.StatSpellPower]:1,[I.StatSpellCrit]:.163,[I.StatSpellHaste]:1,[I.StatMP5]:0}),consumes:R,rotation:j,talents:G.data,specOptions:x,raidBuffs:_,partyBuffs:T.create({}),individualBuffs:V,debuffs:J},playerIconInputs:[K],rotationIconInputs:[U,q,Q],rotationInputs:X,includeBuffDebuffInputs:[E,C,W,D,k,A,H],excludeBuffDebuffInputs:[],otherInputs:{inputs:[N]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[G],gear:[z,L]}})}}export{j as D,L as P,Y as S,G as a,x as b,R as c};
//# sourceMappingURL=sim-11f01f46.chunk.js.map
