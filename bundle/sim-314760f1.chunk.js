import{a6 as e,N as n,g as t,cf as a,cg as i,T as s,bs as r,b1 as l,bv as o,bw as d,ch as c,ci as m,bo as p,b4 as g,b7 as f,b9 as h,a_ as u,d as b,a as S,R as T,a3 as y,bm as v,bn as M,D as w}from"./raid_sim_action-9e0deda9.chunk.js";import{m as O,i as R,h as A,b as B,a as E,c as I,B as P,I as C,C as F,w as x,J as k,T as N,q as W}from"./individual_sim_ui-458732be.chunk.js";const H=O({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=n,setValue:(e,a,i)=>{const s=a.getSpecOptions();s.innervateTarget=t.create({targetIndex:i?0:n}),a.setSpecOptions(e,s)}}),j=R({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),U=A({fieldName:"prepopOoc",label:"Pre-pop Clearcasting",labelTooltip:"Start fight with clearcasting active",showWhen:e=>e.getTalents().omenOfClarity,changeEmitter:e=>s.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),G=A({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:'Assume bleed always exists for "Rend and Tear" calculations. Otherwise will only calculate based on own rip/rake/lacerate.'}),D={inputs:[B({fieldName:"maintainFaerieFire",label:"Maintain Faerie Fire",labelTooltip:"Use Faerie Fire whenever it is not active on the target."}),E({fieldName:"bearWeaveType",label:"Bearweaving",values:[{name:"None",value:a.None},{name:"Mangle",value:a.Mangle},{name:"Lacerate",value:a.Lacerate}]}),I({fieldName:"hotUptime",label:"Revitalize Hot Uptime",labelTooltip:"Hot uptime percentage to assume when theorizing energy gains",percent:!0}),I({fieldName:"maxRoarClip",label:"Roar Clip",labelTooltip:"Max seconds to clip roar"}),B({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end"}),E({fieldName:"biteModeType",label:"Bite Mode",labelTooltip:'Underlying "Bite logic" to use',values:[{name:"Emperical",value:i.Emperical}],showWhen:e=>1==e.getRotation().useBite}),I({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:e=>1==e.getRotation().useBite&&e.getRotation().biteModeType==i.Emperical})]},_={name:"Standard",data:r.create({talentsString:"-503202132322010053120230310511-205503012",glyphs:l.create({major1:o.GlyphOfRip,major2:o.GlyphOfSavageRoar,major3:o.GlyphOfShred,minor1:d.GlyphOfDash,minor2:d.GlyphOfTheWild,minor3:d.GlyphOfUnburdenedRebirth})})},L=c.create({bearWeaveType:a.Lacerate,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!1,mangleSpam:!1,biteModeType:i.Emperical,biteTime:10,berserkBiteThresh:30,powerbear:!1,maxRoarClip:10,maintainFaerieFire:!0,hotUptime:0}),z=m.create({latencyMs:100,prepopOoc:!0,assumeBleedActive:!1}),J=p.create({flask:g.FlaskOfEndlessRage,food:f.FoodFishFeast,defaultPotion:h.PotionOfSpeed}),q={name:"PreRaid",tooltip:P,gear:u.fromJsonString('{"items": [\n    {\n      "id": 42550,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        39996\n      ]\n    },\n    {\n      "id": 40678\n    },\n    {\n      "id": 37139,\n      "enchant": 44871,\n      "gems": [\n        39996\n      ]\n    },\n    {\n      "id": 37840,\n      "enchant": 55002\n    },\n    {\n      "id": 37219,\n      "enchant": 44489\n    },\n    {\n      "id": 44203,\n      "enchant": 44484,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 37409,\n      "enchant": 54999,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 40694,\n      "gems": [\n        49110,\n        39996\n      ]\n    },\n    {\n      "id": 37644,\n      "enchant": 38374\n    },\n    {\n      "id": 44297,\n      "enchant": 55016\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 37624\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 37166\n    },\n    {\n      "id": 37883,\n      "enchant": 44483\n    },\n    {},\n    {\n      "id": 40713\n    }\n  ]}')},V={name:"P1 Preset",tooltip:P,gear:u.fromJsonString('{"items": [\n        {\n          "id": 40473,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            39996\n          ]\n        },\n        {\n          "id": 44664,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40494,\n          "enchant": 44871,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 40403,\n          "enchant": 55002\n        },\n        {\n          "id": 40539,\n          "enchant": 44489,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 39765,\n          "enchant": 44484,\n          "gems": [\n            39996,\n            0\n          ]\n        },\n        {\n          "id": 40541,\n          "enchant": 54999,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 40205,\n          "gems": [\n            39996\n          ]\n        },\n        {\n          "id": 44011,\n          "enchant": 38374,\n          "gems": [\n            39996,\n            49110\n          ]\n        },\n        {\n          "id": 40243,\n          "enchant": 55016,\n          "gems": [\n            40014\n          ]\n        },\n        {\n          "id": 40474\n        },\n        {\n          "id": 40717\n        },\n        {\n          "id": 42987\n        },\n        {\n          "id": 40256\n        },\n        {\n          "id": 40388,\n          "enchant": 44492\n        },\n        {},\n        {\n          "id": 39757\n        }\n      ]}')};class K extends C{constructor(e,a){super(e,a,{cssClass:"feral-druid-sim-ui",knownIssues:["Stats display only humanoid form"],warnings:[],epStats:[b.StatStrength,b.StatAgility,b.StatAttackPower,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmorPenetration,b.StatExpertise],epReferenceStat:b.StatAttackPower,displayStats:[b.StatHealth,b.StatStrength,b.StatAgility,b.StatIntellect,b.StatSpirit,b.StatAttackPower,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmorPenetration,b.StatExpertise,b.StatMana,b.StatMP5],defaults:{gear:V.gear,epWeights:S.fromMap({[b.StatStrength]:2.379,[b.StatAgility]:2.15,[b.StatAttackPower]:1,[b.StatMeleeHit]:2.51,[b.StatMeleeCrit]:2,[b.StatMeleeHaste]:1.67,[b.StatArmorPenetration]:1.66,[b.StatExpertise]:2.28}),consumes:J,rotation:L,talents:_.data,specOptions:m.create({innervateTarget:t.create({targetIndex:n}),latencyMs:100}),raidBuffs:T.create({arcaneBrilliance:!0,giftOfTheWild:y.TristateEffectImproved,bloodlust:!0,manaSpringTotem:y.TristateEffectRegular,strengthOfEarthTotem:y.TristateEffectImproved,battleShout:y.TristateEffectImproved,unleashedRage:!0,icyTalons:!0,swiftRetribution:!0,sanctifiedRetribution:!0}),partyBuffs:v.create({}),individualBuffs:M.create({blessingOfKings:!0,blessingOfMight:y.TristateEffectImproved}),debuffs:w.create({judgementOfWisdom:!0,bloodFrenzy:!0,giftOfArthas:!0,exposeArmor:!0,faerieFire:y.TristateEffectImproved,sunderArmor:!0,curseOfWeakness:y.TristateEffectRegular,heartOfTheCrusader:!0})},playerIconInputs:[H],rotationInputs:D,includeBuffDebuffInputs:[F,x,k],excludeBuffDebuffInputs:[],otherInputs:{inputs:[j,U,G,N,W]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[_],gear:[q,V]}})}}export{L as D,K as F,V as P,_ as S,z as a,J as b};
//# sourceMappingURL=sim-314760f1.chunk.js.map
