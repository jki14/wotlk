import"./modulepreload-polyfill-e60e1b44.chunk.js";import{dJ as t,T as e,dK as a,dL as n,dM as i,bs as r,b1 as o,bH as s,bI as l,dN as p,dO as d,bo as m,b4 as f,b7 as u,b9 as c,a_ as S,d as g,a as h,R as b,a3 as T,bm as y,bn as P,D as E,P as v,S as k}from"./raid_sim_action-9e0deda9.chunk.js";import{i as B,a as I,B as A,I as O,l as w,T as C,E as D,H,F as R,q as M,S as F}from"./individual_sim_ui-458732be.chunk.js";const z=B({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),x={inputs:[I({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:t.Blood},{name:"Frost",value:t.Frost},{name:"Unholy",value:t.Unholy}],changeEmitter:t=>e.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),I({fieldName:"opener",label:"Opener",labelTooltip:"<p>Chose what opener to perform:</p>\t\t\t\t<p><b>Regular</b>: Regular opener.</p>\t\t\t\t<p><b>Threat</b>: Full IT spam for max threat.</p>",values:[{name:"Regular",value:a.Regular},{name:"Threat",value:a.Threat}],changeEmitter:t=>e.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),I({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"<p>Chose what metric to optimize :</p>\t\t\t\t<p><b>Hps</b>: Prioritizes holding runes for healing after damage taken.</p>\t\t\t\t<p><b>Tps</b>: Prioritizes spending runes for icy touch spam.</p>\t\t\t\t<p><b>Dps</b>: Prioritizes spending runes for maximizing damage.</p>",values:[{name:"Hps",value:n.Hps},{name:"Tps",value:n.Tps},{name:"Dps",value:n.Dps}],changeEmitter:t=>e.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])}),I({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"<p>Chose what blood rune spender to use.</p>",values:[{name:"Blood Strike",value:i.BloodStrike},{name:"Blood Boil",value:i.BloodBoil},{name:"Heart Strike",value:i.HeartStrike}],changeEmitter:t=>e.onAny([t.rotationChangeEmitter,t.talentsChangeEmitter])})]},j={name:"Balanced",data:r.create({talentsString:"005510153330330220102013-3050505100023101-002",glyphs:o.create({major1:s.GlyphOfDisease,major2:s.GlyphOfVampiricBlood,major3:s.GlyphOfDarkCommand,minor1:l.GlyphOfHornOfWinter,minor2:l.GlyphOfBloodTap,minor3:l.GlyphOfRaiseDead})})},G=p.create({opener:a.Threat,optimizationSetting:n.Hps,bloodSpell:i.BloodStrike,presence:t.Frost}),N=d.create({startingRunicPower:0}),_=m.create({flask:f.FlaskOfStoneblood,food:u.FoodDragonfinFilet,defaultPotion:c.IndestructiblePotion,prepopPotion:c.IndestructiblePotion}),W={name:"P1 BiS Blood",tooltip:A,gear:S.fromJsonString('{ "items": [\n    {\n      "id": 40565,\n      "enchant": 67839,\n      "gems": [\n        41380,\n        36767\n      ]\n    },\n    {\n      "id": 40387\n    },\n    {\n      "id": 39704,\n      "enchant": 44957,\n      "gems": [\n        40008\n      ]\n    },\n    {\n      "id": 40252,\n      "enchant": 55002\n    },\n    {\n      "id": 40559,\n      "gems": [\n        40008,\n        40022\n      ]\n    },\n    {\n      "id": 40306,\n      "enchant": 44944,\n      "gems": [\n        40008,\n        0\n      ]\n    },\n    {\n      "id": 40563,\n      "enchant": 63770,\n      "gems": [\n        40008,\n        0\n      ]\n    },\n    {\n      "id": 39759,\n      "gems": [\n        40008,\n        40008\n      ]\n    },\n    {\n      "id": 40567,\n      "enchant": 38373,\n      "gems": [\n        40008,\n        40008\n      ]\n    },\n    {\n      "id": 40297,\n      "enchant": 44491\n    },\n    {\n      "id": 40718\n    },\n    {\n      "id": 40107\n    },\n    {\n      "id": 44063,\n      "gems": [\n        36767,\n        36767\n      ]\n    },\n    {\n      "id": 42341,\n      "gems": [\n        40008,\n        40008\n      ]\n    },\n    {\n      "id": 40406,\n      "enchant": 62158\n    },\n    {},\n    {\n      "id": 40207\n    }\n  ]}')};const J=new F,K=new v(k.SpecTankDeathknight,J);J.raid.setPlayer(e.nextEventID(),0,K),new class extends O{constructor(t,e){super(t,e,{cssClass:"tank-deathknight-sim-ui",knownIssues:["<p>Completely unfinished.</p>"],epStats:[g.StatStamina,g.StatStrength,g.StatAgility,g.StatAttackPower,g.StatExpertise,g.StatMeleeHit,g.StatMeleeCrit,g.StatMeleeHaste,g.StatArmor,g.StatArmorPenetration,g.StatDefense,g.StatDodge,g.StatParry,g.StatResilience,g.StatSpellHit],epReferenceStat:g.StatAttackPower,displayStats:[g.StatHealth,g.StatArmor,g.StatStamina,g.StatStrength,g.StatAgility,g.StatAttackPower,g.StatExpertise,g.StatMeleeHit,g.StatSpellHit,g.StatMeleeCrit,g.StatMeleeHaste,g.StatArmorPenetration,g.StatDefense,g.StatDodge,g.StatParry,g.StatResilience],defaults:{gear:W.gear,epWeights:h.fromMap({[g.StatArmor]:.05,[g.StatStamina]:1,[g.StatStrength]:.33,[g.StatAgility]:.6,[g.StatAttackPower]:.06,[g.StatExpertise]:.67,[g.StatMeleeHit]:.67,[g.StatMeleeCrit]:.28,[g.StatMeleeHaste]:.21,[g.StatArmorPenetration]:.19,[g.StatBlock]:.35,[g.StatBlockValue]:.59,[g.StatDodge]:.7,[g.StatParry]:.58,[g.StatDefense]:.8}),consumes:_,rotation:G,talents:j.data,specOptions:N,raidBuffs:b.create({retributionAura:!0,powerWordFortitude:T.TristateEffectImproved,giftOfTheWild:T.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:T.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:T.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:T.TristateEffectImproved,stoneskinTotem:T.TristateEffectImproved}),partyBuffs:y.create({}),individualBuffs:P.create({blessingOfKings:!0,blessingOfMight:T.TristateEffectImproved,blessingOfSanctuary:!0}),debuffs:E.create({bloodFrenzy:!0,faerieFire:T.TristateEffectRegular,sunderArmor:!0,misery:!0,ebonPlaguebringer:!0,mangle:!0,heartOfTheCrusader:!0,demoralizingShout:T.TristateEffectImproved,frostFever:T.TristateEffectImproved,insectSwarm:!0,judgementOfLight:!0})},playerIconInputs:[],rotationInputs:x,includeBuffDebuffInputs:[w],excludeBuffDebuffInputs:[],otherInputs:{inputs:[C,D,H,R,M,z]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[j],gear:[W]}})}}(document.body,K);
//# sourceMappingURL=index-b63d65dc.entry.js.map
